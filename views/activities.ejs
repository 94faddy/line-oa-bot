<%- include('partials/header', {
    title: 'กิจกรรมแชร์',
    pageIcon: '🎁',
    pageTitle: 'กิจกรรมแชร์',
    pageSubtitle: 'จัดการข้อความและคีย์เวิร์ดกิจกรรม',
    username: username,
    activePage: 'activities'
}) %>

<style>
    .activity-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .activity-card {
        background: white;
        border: 2px solid #e0e0e0;
        border-radius: 15px;
        overflow: hidden;
        transition: all 0.3s;
        position: relative;
    }

    .activity-card:hover {
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        transform: translateY(-5px);
        border-color: #667eea;
    }

    .activity-card.disabled {
        opacity: 0.6;
        background: #f8f9fa;
    }

    .activity-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .activity-header h3 {
        margin: 0;
        font-size: 1.3em;
    }

    .activity-body {
        padding: 20px;
    }

    .activity-info {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        padding: 10px;
        background: #f8f9fa;
        border-radius: 5px;
        font-size: 0.9em;
    }

    .activity-message-preview {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        border-left: 4px solid #667eea;
        margin: 15px 0;
        max-height: 200px;
        overflow-y: auto;
    }

    .message-box-preview {
        background: white;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 8px;
        border: 1px solid #e0e0e0;
        font-size: 0.85em;
    }

    .message-box-preview .box-type {
        display: inline-block;
        padding: 3px 8px;
        border-radius: 10px;
        font-size: 0.75em;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .box-type.text { background: #e3f2fd; color: #1976d2; }
    .box-type.image { background: #f3e5f5; color: #7b1fa2; }
    .box-type.flex { background: #e8f5e9; color: #388e3c; }

    .keyword-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin: 10px 0;
    }

    .keyword-tag {
        background: #667eea;
        color: white;
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.85em;
    }

    .channel-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin: 10px 0;
    }

    .channel-tag {
        background: #28a745;
        color: white;
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.85em;
    }

    .activity-actions {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px;
        margin-top: 15px;
    }

    .activity-actions button {
        padding: 10px;
        font-size: 0.9em;
    }

    .status-badge {
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.8em;
        font-weight: bold;
    }

    .status-enabled {
        background: #d4edda;
        color: #155724;
    }

    .status-disabled {
        background: #f8d7da;
        color: #721c24;
    }

    .cooldown-badge {
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.75em;
        font-weight: bold;
        margin-left: 10px;
    }

    .cooldown-on {
        background: #fff3cd;
        color: #856404;
    }

    .cooldown-off {
        background: #d1ecf1;
        color: #0c5460;
    }

    .shared-badge {
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.75em;
        font-weight: bold;
        margin-left: 10px;
    }

    .shared-on {
        background: #d4edda;
        color: #155724;
    }

    .shared-off {
        background: #f8d7da;
        color: #721c24;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        animation: fadeIn 0.3s;
        overflow-y: auto;
    }

    .modal-content {
        background-color: white;
        margin: 3% auto;
        padding: 0;
        border-radius: 15px;
        width: 90%;
        max-width: 900px;
        animation: slideDown 0.3s;
        max-height: 90vh;
        overflow-y: auto;
    }

    .modal-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        border-radius: 15px 15px 0 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: sticky;
        top: 0;
        z-index: 10;
    }

    .modal-header h2 {
        margin: 0;
        border: none;
        padding: 0;
    }

    .close {
        color: white;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
        background: none;
        border: none;
        padding: 0;
        line-height: 1;
    }

    .close:hover {
        opacity: 0.8;
    }

    .modal-body {
        padding: 30px;
    }

    .toggle-switch {
        position: relative;
        display: inline-block;
        width: 50px;
        height: 24px;
    }

    .toggle-switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: 0.4s;
        border-radius: 24px;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 18px;
        width: 18px;
        left: 3px;
        bottom: 3px;
        background-color: white;
        transition: 0.4s;
        border-radius: 50%;
    }

    input:checked + .slider {
        background-color: #28a745;
    }

    input:checked + .slider:before {
        transform: translateX(26px);
    }

    .channels-checkboxes {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 10px;
        margin-top: 10px;
    }

    .channel-checkbox {
        display: flex;
        align-items: center;
        padding: 10px;
        background: #f8f9fa;
        border-radius: 8px;
        border: 2px solid #e0e0e0;
        transition: all 0.3s;
        cursor: pointer;
    }

    .channel-checkbox:hover {
        border-color: #667eea;
        background: #e7f3ff;
    }

    .channel-checkbox input {
        margin-right: 10px;
        cursor: pointer;
    }

    .channel-checkbox.checked {
        background: #d4edda;
        border-color: #28a745;
    }

    .users-table-container {
        max-height: 400px;
        overflow-y: auto;
        margin-top: 15px;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
    }

    .cooldown-settings {
        background: #fff3cd;
        padding: 15px;
        border-radius: 8px;
        border-left: 4px solid #ffc107;
        margin: 15px 0;
    }

    .cooldown-settings.disabled {
        background: #e9ecef;
        border-left-color: #6c757d;
        opacity: 0.6;
    }

    .shared-keywords-settings {
        background: #d4edda;
        padding: 15px;
        border-radius: 8px;
        border-left: 4px solid #28a745;
        margin: 15px 0;
    }

    .shared-keywords-settings.disabled {
        background: #f8d7da;
        border-left-color: #dc3545;
    }

    /* Message Boxes Styles */
    .message-boxes-container {
        margin: 20px 0;
        padding: 20px;
        background: #f8f9fa;
        border-radius: 10px;
        border: 2px dashed #667eea;
    }

    .message-box {
        background: white;
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 15px;
        position: relative;
        transition: all 0.3s;
    }

    .message-box:hover {
        border-color: #667eea;
        box-shadow: 0 2px 10px rgba(102, 126, 234, 0.1);
    }

    .message-box-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        padding-bottom: 10px;
        border-bottom: 2px solid #f0f0f0;
    }

    .message-box-number {
        background: #667eea;
        color: white;
        padding: 5px 15px;
        border-radius: 20px;
        font-weight: bold;
        font-size: 0.9em;
    }

    .message-box-controls {
        display: flex;
        gap: 10px;
    }

    .btn-move {
        background: #17a2b8;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 0.85em;
        transition: all 0.3s;
    }

    .btn-move:hover {
        background: #138496;
    }

    .btn-remove-box {
        background: #dc3545;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 0.85em;
        transition: all 0.3s;
    }

    .btn-remove-box:hover {
        background: #c82333;
    }

    .message-type-selector {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 10px;
        margin-bottom: 15px;
    }

    .type-option {
        padding: 12px;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s;
        background: white;
    }

    .type-option:hover {
        border-color: #667eea;
        background: #f0f4ff;
    }

    .type-option.active {
        border-color: #667eea;
        background: #667eea;
        color: white;
        font-weight: bold;
    }

    .type-option input[type="radio"] {
        display: none;
    }

    .message-content-area {
        margin-top: 15px;
    }

    .btn-add-box {
        width: 100%;
        padding: 15px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        border-radius: 10px;
        font-size: 1.1em;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s;
        margin-top: 15px;
    }

    .btn-add-box:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
    }

    .json-editor {
        font-family: 'Courier New', monospace;
        font-size: 0.85em;
        min-height: 200px;
        border: 2px solid #e0e0e0;
        border-radius: 5px;
        padding: 10px;
    }

    .json-editor:focus {
        border-color: #667eea;
        outline: none;
    }

    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @keyframes slideDown {
        from {
            transform: translateY(-50px);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    @media (max-width: 768px) {
        .activity-grid {
            grid-template-columns: 1fr;
        }

        .activity-actions {
            grid-template-columns: 1fr;
        }

        .message-type-selector {
            grid-template-columns: 1fr;
        }
    }
</style>

<!-- Stats -->
<div class="stats">
    <div class="stat-card">
        <div class="icon">🎯</div>
        <h3>กิจกรรมทั้งหมด</h3>
        <div class="value"><%= activities.length %></div>
    </div>

    <div class="stat-card">
        <div class="icon">✅</div>
        <h3>กิจกรรมเปิดใช้งาน</h3>
        <div class="value"><%= activities.filter(a => a.enabled).length %></div>
    </div>

    <div class="stat-card">
        <div class="icon">👥</div>
        <h3>ผู้ใช้งานทั้งหมด</h3>
        <div class="value"><%= totalUsers %></div>
    </div>

    <div class="stat-card">
        <div class="icon">📱</div>
        <h3>LINE Channels</h3>
        <div class="value"><%= lineChannels.length %></div>
    </div>
</div>

<!-- Add Activity Button -->
<div class="section">
    <h2>
        🎁 กิจกรรมทั้งหมด
        <button class="btn btn-success" onclick="openAddActivityModal()">➕ เพิ่มกิจกรรม</button>
    </h2>

    <% if (activities.length === 0) { %>
        <div class="empty-state">
            <div class="icon">🎁</div>
            <h3>ยังไม่มีกิจกรรม</h3>
            <p>คลิกปุ่ม "เพิ่มกิจกรรม" เพื่อสร้างกิจกรรมใหม่</p>
        </div>
    <% } else { %>
        <div class="activity-grid">
            <% activities.forEach(function(activity) { %>
                <div class="activity-card <%= !activity.enabled ? 'disabled' : '' %>">
                    <div class="activity-header">
                        <div>
                            <h3><%= activity.name %></h3>
                            <% if (activity.useCooldown !== undefined) { %>
                                <span class="cooldown-badge <%= activity.useCooldown ? 'cooldown-on' : 'cooldown-off' %>">
                                    <%= activity.useCooldown ? '⏱️ มี Cooldown' : '🚀 ไม่จำกัด' %>
                                </span>
                            <% } %>
                            <% if (activity.allowSharedKeywords !== undefined) { %>
                                <span class="shared-badge <%= activity.allowSharedKeywords ? 'shared-on' : 'shared-off' %>">
                                    <%= activity.allowSharedKeywords ? '🔗 Shared✅' : '🔒 Shared❌' %>
                                </span>
                            <% } %>
                        </div>
                        <span class="status-badge <%= activity.enabled ? 'status-enabled' : 'status-disabled' %>">
                            <%= activity.enabled ? '✅ เปิด' : '❌ ปิด' %>
                        </span>
                    </div>

                    <div class="activity-body">
                        <!-- Message Boxes Preview -->
                        <div class="activity-message-preview">
                            <strong style="font-size: 0.9em; color: #666;">📦 ข้อความที่จะส่ง (<%= activity.messageBoxes ? activity.messageBoxes.length : (activity.message ? 1 : 0) %> รายการ):</strong>
                            
                            <% if (activity.messageBoxes && activity.messageBoxes.length > 0) { %>
                                <% activity.messageBoxes.forEach(function(box, index) { %>
                                    <div class="message-box-preview">
                                        <span class="box-type <%= box.type %>">
                                            <%= index + 1 %>. 
                                            <% if (box.type === 'text') { %>📝 ข้อความ<% } %>
                                            <% if (box.type === 'image') { %>🖼️ รูปภาพ<% } %>
                                            <% if (box.type === 'flex') { %>💬 Flex Message<% } %>
                                        </span>
                                        <div style="margin-top: 5px; color: #666; font-size: 0.9em;">
                                            <% if (box.type === 'text') { %>
                                                <%= box.content.substring(0, 80) %><%= box.content.length > 80 ? '...' : '' %>
                                            <% } else if (box.type === 'image') { %>
                                                🔗 <%= box.content.substring(0, 50) %>...
                                            <% } else if (box.type === 'flex') { %>
                                                📋 Flex JSON (คลิกดูรายละเอียดเพื่อดู)
                                            <% } %>
                                        </div>
                                    </div>
                                <% }); %>
                            <% } else if (activity.message) { %>
                                <div class="message-box-preview">
                                    <span class="box-type text">1. 📝 ข้อความ (รูปแบบเก่า)</span>
                                    <div style="margin-top: 5px; color: #666; font-size: 0.9em;">
                                        <%= activity.message.substring(0, 80) %><%= activity.message.length > 80 ? '...' : '' %>
                                    </div>
                                </div>
                            <% } else { %>
                                <div style="color: #999; padding: 10px;">ไม่มีข้อความ</div>
                            <% } %>
                        </div>

                        <!-- Cooldown Info -->
                        <% if (activity.useCooldown) { %>
                            <div class="activity-info">
                                <span>⏱️ Cooldown:</span>
                                <strong><%= activity.cooldownHours %> ชั่วโมง</strong>
                            </div>
                        <% } else { %>
                            <div class="activity-info" style="background: #d1ecf1; color: #0c5460;">
                                <span>🚀 โหมด:</span>
                                <strong>ส่งได้ไม่จำกัด</strong>
                            </div>
                        <% } %>

                        <!-- Shared Keywords Info -->
                        <% if (activity.allowSharedKeywords !== false) { %>
                            <div class="activity-info" style="background: #d4edda; color: #155724;">
                                <span>🔗 คีย์เวิร์ดร่วม:</span>
                                <strong>อนุญาต</strong>
                            </div>
                        <% } else { %>
                            <div class="activity-info" style="background: #f8d7da; color: #721c24;">
                                <span>🔒 คีย์เวิร์ดร่วม:</span>
                                <strong>ไม่อนุญาต</strong>
                            </div>
                        <% } %>

                        <!-- Keywords -->
                        <div style="margin: 15px 0;">
                            <strong style="font-size: 0.9em; color: #666;">🔑 คีย์เวิร์ด:</strong>
                            <div class="keyword-tags">
                                <% activity.keywords.forEach(function(keyword) { %>
                                    <span class="keyword-tag"><%= keyword %></span>
                                <% }); %>
                            </div>
                        </div>

                        <!-- Channels -->
                        <div style="margin: 15px 0;">
                            <strong style="font-size: 0.9em; color: #666;">📱 ใช้งานใน Channels:</strong>
                            <div class="channel-tags">
                                <% if (activity.channels && activity.channels.length > 0) { %>
                                    <% activity.channels.forEach(function(channelId) { 
                                        const channel = lineChannels.find(c => c.id === channelId);
                                        if (channel) { %>
                                            <span class="channel-tag"><%= channel.name %></span>
                                        <% }
                                    }); %>
                                <% } else { %>
                                    <span style="color: #999; font-size: 0.85em;">ไม่ได้เลือก Channel</span>
                                <% } %>
                            </div>
                        </div>

                        <!-- User Stats -->
                        <div class="activity-info">
                            <span>👥 ผู้ใช้ทั้งหมด:</span>
                            <strong><%= activity.users.length %> คน</strong>
                        </div>

                        <% if (activity.useCooldown) { %>
                            <div class="activity-info">
                                <span>✅ ผู้ใช้พร้อมรับ:</span>
                                <strong style="color: #28a745;"><%= activity.usersCanSend %> คน</strong>
                            </div>
                        <% } %>

                        <!-- Toggle Switch -->
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 15px; padding: 10px; background: #f8f9fa; border-radius: 8px;">
                            <span style="font-weight: 600;">เปิด/ปิดใช้งาน:</span>
                            <label class="toggle-switch">
                                <input type="checkbox" <%= activity.enabled ? 'checked' : '' %> onchange="toggleActivity('<%= activity.id %>', this.checked)">
                                <span class="slider"></span>
                            </label>
                        </div>

                        <!-- Actions -->
                        <div class="activity-actions">
                            <button class="btn btn-primary" onclick="viewActivityUsers('<%= activity.id %>')">
                                👥 ดูผู้ใช้
                            </button>
                            <button class="btn btn-warning" onclick="editActivity('<%= activity.id %>')">
                                ✏️ แก้ไข
                            </button>
                            <button class="btn btn-secondary" onclick="viewActivityDetails('<%= activity.id %>')">
                                👁️ ดูรายละเอียด
                            </button>
                            <button class="btn btn-danger" onclick="deleteActivity('<%= activity.id %>', '<%= activity.name %>')">
                                🗑️ ลบ
                            </button>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    <% } %>
</div>

<!-- Add/Edit Activity Modal -->
<div id="activityModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2 id="modalTitle">➕ เพิ่มกิจกรรมใหม่</h2>
            <button class="close" onclick="closeActivityModal()">&times;</button>
        </div>
        <div class="modal-body">
            <form id="activityForm">
                <input type="hidden" id="activityId">

                <div class="form-group">
                    <label for="activityName">📝 ชื่อกิจกรรม</label>
                    <input type="text" id="activityName" placeholder="เช่น: กิจกรรมแชร์โพสรับ 100" required>
                    <small>ชื่อสำหรับระบุกิจกรรม</small>
                </div>

                <!-- Message Boxes Section -->
                <div class="form-group">
                    <label>📦 ข้อความที่จะส่ง</label>
                    <small style="display: block; margin-bottom: 10px;">เพิ่มข้อความหลายแบบ (ข้อความ, รูปภาพ, Flex Message) และเรียงลำดับการส่งได้</small>
                    
                    <div class="message-boxes-container" id="messageBoxesContainer">
                        <!-- Message boxes จะถูกเพิ่มที่นี่ -->
                    </div>

                    <button type="button" class="btn-add-box" onclick="addMessageBox()">
                        ➕ เพิ่มข้อความ
                    </button>
                </div>

                <!-- Cooldown Toggle -->
                <div class="form-group">
                    <div style="display: flex; justify-content: space-between; align-items: center; padding: 15px; background: #f8f9fa; border-radius: 8px;">
                        <div>
                            <strong>⏱️ เปิดใช้งาน Cooldown</strong>
                            <br>
                            <small style="color: #666;">เมื่อปิด ผู้ใช้สามารถรับข้อความได้ทุกครั้งที่พิมพ์คีย์เวิร์ด</small>
                        </div>
                        <label class="toggle-switch">
                            <input type="checkbox" id="useCooldown" checked onchange="toggleCooldownFields()">
                            <span class="slider"></span>
                        </label>
                    </div>
                </div>

                <!-- Shared Keywords Toggle -->
                <div class="form-group">
                    <div id="sharedKeywordsToggle" style="display: flex; justify-content: space-between; align-items: center; padding: 15px; background: #f8f9fa; border-radius: 8px;">
                        <div>
                            <strong>🔗 อนุญาตคีย์เวิร์ดซ้ำกับกิจกรรมอื่น</strong>
                            <br>
                            <small style="color: #666;">เมื่อเปิด หากมีกิจกรรมอื่นใช้คีย์เวิร์ดเดียวกัน จะส่งพร้อมกัน</small>
                            <br>
                            <small style="color: #dc3545;">⚠️ กิจกรรมที่ปิดจะไม่ส่งหากมีคีย์เวิร์ดร่วมกับกิจกรรมอื่น</small>
                        </div>
                        <label class="toggle-switch">
                            <input type="checkbox" id="allowSharedKeywords" checked>
                            <span class="slider"></span>
                        </label>
                    </div>
                </div>

                <!-- Cooldown Settings -->
                <div id="cooldownSettings" class="cooldown-settings">
                    <div class="form-group">
                        <label for="cooldownMessage">⏰ ข้อความแจ้งเตือน Cooldown</label>
                        <textarea id="cooldownMessage" style="min-height: 100px; font-family: 'Courier New', monospace;"></textarea>
                        <small>ใช้ {timeLeft} เพื่อแสดงเวลาที่เหลือ</small>
                    </div>

                    <div class="form-group">
                        <label for="cooldownHours">⏱️ ระยะเวลา Cooldown (ชั่วโมง)</label>
                        <input type="number" id="cooldownHours" min="0.1" step="0.1" value="2" required>
                        <small>ระยะเวลาที่ผู้ใช้ต้องรอก่อนรับกิจกรรมซ้ำ</small>
                    </div>
                </div>

                <div class="form-group">
                    <label for="keywords">🔑 คีย์เวิร์ด</label>
                    <input type="text" id="keywords" placeholder="ฟรี, free, เครดิตฟรี" required>
                    <small>คั่นด้วยเครื่องหมายจุลภาค (,)</small>
                </div>

                <div class="form-group">
                    <label>📱 เลือก LINE Channels ที่ต้องการใช้กิจกรรมนี้</label>
                    <% if (lineChannels.length === 0) { %>
                        <div class="info-box">
                            ⚠️ ยังไม่มี LINE Channel กรุณาเพิ่ม Channel ที่หน้าตั้งค่าระบบก่อน
                        </div>
                    <% } else { %>
                        <div class="channels-checkboxes" id="channelsCheckboxes">
                            <% lineChannels.forEach(function(channel) { %>
                                <label class="channel-checkbox" data-channel-id="<%= channel.id %>">
                                    <input type="checkbox" name="channels" value="<%= channel.id %>">
                                    <span><%= channel.name %></span>
                                </label>
                            <% }); %>
                        </div>
                        <small style="display: block; margin-top: 10px;">เลือกอย่างน้อย 1 channel</small>
                    <% } %>
                </div>

                <div style="display: flex; gap: 10px; margin-top: 20px;">
                    <button type="submit" class="btn btn-success" style="flex: 1;">💾 บันทึก</button>
                    <button type="button" class="btn btn-secondary" onclick="closeActivityModal()" style="flex: 1;">❌ ยกเลิก</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- View Users Modal -->
<div id="usersModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2 id="usersModalTitle">👥 รายชื่อผู้ใช้งาน</h2>
            <button class="close" onclick="closeUsersModal()">&times;</button>
        </div>
        <div class="modal-body">
            <div id="usersContent"></div>
            <div style="display: flex; gap: 10px; margin-top: 20px;">
                <button class="btn btn-danger" onclick="clearActivityUsers()" style="flex: 1;">🗑️ ล้างข้อมูลผู้ใช้</button>
                <button class="btn btn-secondary" onclick="closeUsersModal()" style="flex: 1;">✖️ ปิด</button>
            </div>
        </div>
    </div>
</div>

<!-- View Details Modal -->
<div id="detailsModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2>👁️ รายละเอียดกิจกรรม</h2>
            <button class="close" onclick="closeDetailsModal()">&times;</button>
        </div>
        <div class="modal-body" id="detailsContent"></div>
    </div>
</div>

<script>
    let activities = <%- JSON.stringify(activities) %>;
    let lineChannels = <%- JSON.stringify(lineChannels) %>;
    let isEditMode = false;
    let currentActivityId = null;
    let messageBoxCounter = 0;

    // Message Box Management
    function addMessageBox(data = null) {
        messageBoxCounter++;
        const boxId = `box-${messageBoxCounter}`;
        const container = document.getElementById('messageBoxesContainer');
        
        const boxDiv = document.createElement('div');
        boxDiv.className = 'message-box';
        boxDiv.id = boxId;
        boxDiv.dataset.boxId = boxId;
        
        const defaultType = data?.type || 'text';
        const defaultContent = data?.content || '';
        const defaultAltText = data?.altText || '';
        
        boxDiv.innerHTML = `
            <div class="message-box-header">
                <span class="message-box-number">ข้อความที่ ${messageBoxCounter}</span>
                <div class="message-box-controls">
                    <button type="button" class="btn-move" onclick="moveBoxUp('${boxId}')">▲ ขึ้น</button>
                    <button type="button" class="btn-move" onclick="moveBoxDown('${boxId}')">▼ ลง</button>
                    <button type="button" class="btn-remove-box" onclick="removeMessageBox('${boxId}')">🗑️ ลบ</button>
                </div>
            </div>
            
            <div class="message-type-selector">
                <label class="type-option ${defaultType === 'text' ? 'active' : ''}" onclick="selectMessageType('${boxId}', 'text')">
                    <input type="radio" name="type-${boxId}" value="text" ${defaultType === 'text' ? 'checked' : ''}>
                    <div>📝</div>
                    <div>ข้อความ</div>
                </label>
                <label class="type-option ${defaultType === 'image' ? 'active' : ''}" onclick="selectMessageType('${boxId}', 'image')">
                    <input type="radio" name="type-${boxId}" value="image" ${defaultType === 'image' ? 'checked' : ''}>
                    <div>🖼️</div>
                    <div>รูปภาพ</div>
                </label>
                <label class="type-option ${defaultType === 'flex' ? 'active' : ''}" onclick="selectMessageType('${boxId}', 'flex')">
                    <input type="radio" name="type-${boxId}" value="flex" ${defaultType === 'flex' ? 'checked' : ''}>
                    <div>💬</div>
                    <div>Flex Message</div>
                </label>
            </div>
            
            <div class="message-content-area" id="content-${boxId}">
                ${getMessageContentHTML(boxId, defaultType, defaultContent, defaultAltText)}
            </div>
        `;
        
        container.appendChild(boxDiv);
        updateBoxNumbers();
    }

    function getMessageContentHTML(boxId, type, content = '', altText = '') {
        if (type === 'text') {
            return `
                <div class="form-group">
                    <label>📝 ข้อความ</label>
                    <textarea id="textarea-${boxId}" style="min-height: 150px; font-family: 'Courier New', monospace;" placeholder="พิมพ์ข้อความที่ต้องการส่ง..." required>${content}</textarea>
                </div>
            `;
        } else if (type === 'image') {
            return `
                <div class="form-group">
                    <label>🖼️ URL รูปภาพ</label>
                    <input type="url" id="input-${boxId}" placeholder="https://example.com/image.jpg" value="${content}" required>
                    <small>⚠️ รูปภาพจะถูกส่งเป็นไฟล์รูปใน LINE OA</small>
                </div>
            `;
        } else if (type === 'flex') {
            return `
                <div class="form-group">
                    <label>💬 Flex Message JSON</label>
                    <textarea id="textarea-${boxId}" class="json-editor" placeholder='{"type": "bubble", "body": {...}}'>${content}</textarea>
                    <small>📋 วาง Flex Message JSON ที่สร้างจาก LINE Bot Designer</small>
                </div>
                <div class="form-group">
                    <label>📱 Alt Text (ข้อความแสดงแทน)</label>
                    <input type="text" id="alttext-${boxId}" placeholder="Flex Message" value="${altText}">
                    <small>ข้อความที่แสดงในการแจ้งเตือน</small>
                </div>
            `;
        }
    }

    function selectMessageType(boxId, type) {
        // Update active state
        const box = document.getElementById(boxId);
        box.querySelectorAll('.type-option').forEach(opt => opt.classList.remove('active'));
        box.querySelector(`input[value="${type}"]`).closest('.type-option').classList.add('active');
        
        // Update content area
        const contentArea = document.getElementById(`content-${boxId}`);
        contentArea.innerHTML = getMessageContentHTML(boxId, type);
    }

    function removeMessageBox(boxId) {
        if (document.querySelectorAll('.message-box').length <= 1) {
            showAlert('error', 'ต้องมีอย่างน้อย 1 ข้อความ');
            return;
        }
        
        if (confirm('ลบข้อความนี้?')) {
            document.getElementById(boxId).remove();
            updateBoxNumbers();
        }
    }

    function moveBoxUp(boxId) {
        const box = document.getElementById(boxId);
        const prev = box.previousElementSibling;
        if (prev) {
            box.parentNode.insertBefore(box, prev);
            updateBoxNumbers();
        }
    }

    function moveBoxDown(boxId) {
        const box = document.getElementById(boxId);
        const next = box.nextElementSibling;
        if (next) {
            box.parentNode.insertBefore(next, box);
            updateBoxNumbers();
        }
    }

    function updateBoxNumbers() {
        const boxes = document.querySelectorAll('.message-box');
        boxes.forEach((box, index) => {
            box.querySelector('.message-box-number').textContent = `ข้อความที่ ${index + 1}`;
        });
    }

    function getMessageBoxesData() {
        const boxes = document.querySelectorAll('.message-box');
        const data = [];
        
        boxes.forEach(box => {
            const boxId = box.dataset.boxId;
            const type = box.querySelector('input[type="radio"]:checked').value;
            
            let content = '';
            let altText = '';
            
            if (type === 'text' || type === 'flex') {
                const textarea = document.getElementById(`textarea-${boxId}`);
                content = textarea ? textarea.value.trim() : '';
                
                if (type === 'flex') {
                    const altTextInput = document.getElementById(`alttext-${boxId}`);
                    altText = altTextInput ? altTextInput.value.trim() : 'Flex Message';
                }
            } else if (type === 'image') {
                const input = document.getElementById(`input-${boxId}`);
                content = input ? input.value.trim() : '';
            }
            
            data.push({
                type: type,
                content: content,
                altText: altText
            });
        });
        
        return data;
    }

    // Toggle Cooldown Fields
    function toggleCooldownFields() {
        const useCooldown = document.getElementById('useCooldown').checked;
        const cooldownSettings = document.getElementById('cooldownSettings');
        
        if (useCooldown) {
            cooldownSettings.classList.remove('disabled');
            cooldownSettings.style.display = 'block';
            document.getElementById('cooldownMessage').required = false;
            document.getElementById('cooldownHours').required = true;
        } else {
            cooldownSettings.classList.add('disabled');
            cooldownSettings.style.display = 'none';
            document.getElementById('cooldownMessage').required = false;
            document.getElementById('cooldownHours').required = false;
        }
    }

    // Open Add Activity Modal
    function openAddActivityModal() {
        isEditMode = false;
        currentActivityId = null;
        messageBoxCounter = 0;
        
        document.getElementById('modalTitle').textContent = '➕ เพิ่มกิจกรรมใหม่';
        document.getElementById('activityForm').reset();
        document.getElementById('activityId').value = '';
        document.getElementById('useCooldown').checked = true;
        document.getElementById('allowSharedKeywords').checked = true;
        document.getElementById('cooldownMessage').value = 'คุณได้รับกิจกรรมไปแล้วค่ะ กรุณารอ {timeLeft} ก่อนขอรับกิจกรรมอีกครั้งนะคะ 😊';
        
        // Clear message boxes
        document.getElementById('messageBoxesContainer').innerHTML = '';
        
        // Add one default text box
        addMessageBox({ type: 'text', content: '' });
        
        toggleCooldownFields();
        
        // Uncheck all channels
        document.querySelectorAll('input[name="channels"]').forEach(cb => {
            cb.checked = false;
            cb.parentElement.classList.remove('checked');
        });
        
        document.getElementById('activityModal').style.display = 'block';
    }

    // Edit Activity
    function editActivity(id) {
        isEditMode = true;
        currentActivityId = id;
        messageBoxCounter = 0;
        
        const activity = activities.find(a => a.id === id);
        
        if (!activity) {
            showAlert('error', 'ไม่พบกิจกรรม');
            return;
        }

        document.getElementById('modalTitle').textContent = '✏️ แก้ไขกิจกรรม';
        document.getElementById('activityId').value = activity.id;
        document.getElementById('activityName').value = activity.name;
        document.getElementById('cooldownMessage').value = activity.cooldownMessage;
        document.getElementById('keywords').value = activity.keywords.join(', ');
        document.getElementById('cooldownHours').value = activity.cooldownHours;
        document.getElementById('useCooldown').checked = activity.useCooldown !== false;
        document.getElementById('allowSharedKeywords').checked = activity.allowSharedKeywords !== false;
        
        // Clear and populate message boxes
        document.getElementById('messageBoxesContainer').innerHTML = '';
        
        if (activity.messageBoxes && activity.messageBoxes.length > 0) {
            activity.messageBoxes.forEach(box => {
                addMessageBox(box);
            });
        } else if (activity.message) {
            // Backward compatibility
            addMessageBox({ type: 'text', content: activity.message });
        } else {
            addMessageBox({ type: 'text', content: '' });
        }
        
        toggleCooldownFields();
        
        // Check selected channels
        document.querySelectorAll('input[name="channels"]').forEach(cb => {
            const isChecked = activity.channels && activity.channels.includes(cb.value);
            cb.checked = isChecked;
            if (isChecked) {
                cb.parentElement.classList.add('checked');
            } else {
                cb.parentElement.classList.remove('checked');
            }
        });
        
        document.getElementById('activityModal').style.display = 'block';
    }

    // Submit Form
    document.getElementById('activityForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const selectedChannels = Array.from(document.querySelectorAll('input[name="channels"]:checked')).map(cb => cb.value);
        
        if (selectedChannels.length === 0) {
            showAlert('error', 'กรุณาเลือกอย่างน้อย 1 LINE Channel');
            return;
        }

        const messageBoxes = getMessageBoxesData();
        
        if (messageBoxes.length === 0) {
            showAlert('error', 'กรุณาเพิ่มข้อความอย่างน้อย 1 รายการ');
            return;
        }

        // Validate message boxes
        for (let i = 0; i < messageBoxes.length; i++) {
            const box = messageBoxes[i];
            if (!box.content || box.content.trim() === '') {
                showAlert('error', `ข้อความที่ ${i + 1}: กรุณากรอกข้อมูล`);
                return;
            }
            
            if (box.type === 'image' && !box.content.startsWith('http')) {
                showAlert('error', `ข้อความที่ ${i + 1}: URL รูปภาพไม่ถูกต้อง`);
                return;
            }
            
            if (box.type === 'flex') {
                try {
                    JSON.parse(box.content);
                } catch (e) {
                    showAlert('error', `ข้อความที่ ${i + 1}: Flex JSON ไม่ถูกต้อง`);
                    return;
                }
            }
        }

        const useCooldown = document.getElementById('useCooldown').checked;
        const allowSharedKeywords = document.getElementById('allowSharedKeywords').checked;

        const formData = {
            name: document.getElementById('activityName').value.trim(),
            messageBoxes: messageBoxes,
            cooldownMessage: document.getElementById('cooldownMessage').value.trim(),
            keywords: document.getElementById('keywords').value.trim(),
            cooldownHours: document.getElementById('cooldownHours').value,
            channels: selectedChannels,
            useCooldown: useCooldown,
            allowSharedKeywords: allowSharedKeywords
        };

        if (!formData.name || !formData.keywords) {
            showAlert('error', 'กรุณากรอกข้อมูลให้ครบถ้วน');
            return;
        }

        const url = isEditMode ? `/activities/update/${currentActivityId}` : '/activities/add';
        
        try {
            const response = await fetch(url, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData)
            });

            const result = await response.json();

            if (result.success) {
                showAlert('success', result.message);
                setTimeout(() => location.reload(), 1500);
            } else {
                showAlert('error', result.message);
            }
        } catch (error) {
            showAlert('error', 'เกิดข้อผิดพลาด: ' + error.message);
        }
    });

    // Toggle Activity
    async function toggleActivity(id, enabled) {
        try {
            const response = await fetch(`/activities/toggle/${id}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ enabled })
            });

            const result = await response.json();

            if (result.success) {
                showAlert('success', result.message);
                setTimeout(() => location.reload(), 1000);
            } else {
                showAlert('error', result.message);
                setTimeout(() => location.reload(), 1000);
            }
        } catch (error) {
            showAlert('error', 'เกิดข้อผิดพลาด: ' + error.message);
            setTimeout(() => location.reload(), 1000);
        }
    }

    // Delete Activity
    async function deleteActivity(id, name) {
        if (!confirm(`ลบกิจกรรม "${name}"?\n\nการกระทำนี้จะลบข้อมูลผู้ใช้ทั้งหมดของกิจกรรมนี้และไม่สามารถย้อนกลับได้!`)) {
            return;
        }

        try {
            const response = await fetch(`/activities/delete/${id}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            });

            const result = await response.json();

            if (result.success) {
                showAlert('success', result.message);
                setTimeout(() => location.reload(), 1500);
            } else {
                showAlert('error', result.message);
            }
        } catch (error) {
            showAlert('error', 'เกิดข้อผิดพลาด: ' + error.message);
        }
    }

    // View Activity Users
    function viewActivityUsers(id) {
        const activity = activities.find(a => a.id === id);
        
        if (!activity) {
            showAlert('error', 'ไม่พบกิจกรรม');
            return;
        }

        currentActivityId = id;
        document.getElementById('usersModalTitle').textContent = `👥 รายชื่อผู้ใช้งาน - ${activity.name}`;
        
        if (activity.users.length === 0) {
            document.getElementById('usersContent').innerHTML = `
                <div class="empty-state">
                    <div class="icon">🔭</div>
                    <h3>ยังไม่มีผู้ใช้งาน</h3>
                    <p>รอให้มีผู้ใช้ส่งข้อความที่มีคีย์เวิร์ดเข้ามาก่อนนะครับ</p>
                </div>
            `;
        } else {
            let statsHtml = `
                <div style="margin-bottom: 15px;">
                    <strong>👥 ผู้ใช้ทั้งหมด:</strong> ${activity.users.length} คน
            `;
            
            if (activity.useCooldown) {
                statsHtml += `<br><strong>✅ ผู้ใช้พร้อมรับ:</strong> <span style="color: #28a745;">${activity.usersCanSend} คน</span>`;
            } else {
                statsHtml += `<br><strong>🚀 โหมด:</strong> <span style="color: #0c5460;">ส่งได้ไม่จำกัด</span>`;
            }
            
            statsHtml += '</div>';

            let tableHtml = statsHtml + `
                <div class="users-table-container">
                    <table style="width: 100%; border-collapse: collapse;">
                        <thead style="background: #667eea; color: white; position: sticky; top: 0;">
                            <tr>
                                <th style="padding: 15px; text-align: left;">#</th>
                                <th style="padding: 15px; text-align: left;">User ID</th>
                                <th style="padding: 15px; text-align: left;">ส่งล่าสุด</th>
            `;

            if (activity.useCooldown) {
                tableHtml += `
                                <th style="padding: 15px; text-align: left;">สถานะ</th>
                                <th style="padding: 15px; text-align: left;">เวลาที่เหลือ</th>
                `;
            }

            tableHtml += `
                            </tr>
                        </thead>
                        <tbody>
            `;

            activity.users.forEach((user, index) => {
                tableHtml += `
                    <tr style="border-bottom: 1px solid #ddd; ${index % 2 === 0 ? 'background: #f9f9f9;' : ''}">
                        <td style="padding: 15px;">${index + 1}</td>
                        <td style="padding: 15px;">${user.userId.substring(0, 20)}...</td>
                        <td style="padding: 15px;">${user.lastSent}</td>
                `;

                if (activity.useCooldown) {
                    tableHtml += `
                        <td style="padding: 15px;">
                            <span style="padding: 5px 12px; border-radius: 15px; font-size: 0.85em; font-weight: bold; background: ${user.canSend ? '#d4edda' : '#fff3cd'}; color: ${user.canSend ? '#155724' : '#856404'};">
                                ${user.canSend ? '✅ พร้อมส่ง' : '⏳ รอ'}
                            </span>
                        </td>
                        <td style="padding: 15px;">${user.remainingTime}</td>
                    `;
                }

                tableHtml += `</tr>`;
            });

            tableHtml += `
                        </tbody>
                    </table>
                </div>
            `;

            document.getElementById('usersContent').innerHTML = tableHtml;
        }
        
        document.getElementById('usersModal').style.display = 'block';
    }

    // Clear Activity Users
    async function clearActivityUsers() {
        if (!confirm('⚠️ คุณแน่ใจหรือไม่ที่จะล้างข้อมูลผู้ใช้ทั้งหมดของกิจกรรมนี้?\n\nการกระทำนี้ไม่สามารถย้อนกลับได้!')) {
            return;
        }

        try {
            const response = await fetch(`/activities/clear-users/${currentActivityId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            });

            const result = await response.json();

            if (result.success) {
                showAlert('success', result.message);
                setTimeout(() => location.reload(), 1500);
            } else {
                showAlert('error', result.message);
            }
        } catch (error) {
            showAlert('error', 'เกิดข้อผิดพลาด: ' + error.message);
        }
    }

    // View Activity Details
    function viewActivityDetails(id) {
        const activity = activities.find(a => a.id === id);
        
        if (!activity) {
            showAlert('error', 'ไม่พบกิจกรรม');
            return;
        }

        const channelNames = activity.channels ? activity.channels.map(cid => {
            const channel = lineChannels.find(c => c.id === cid);
            return channel ? channel.name : 'ไม่ทราบ';
        }).join(', ') : 'ไม่ได้เลือก';

        let messageBoxesHtml = '';
        if (activity.messageBoxes && activity.messageBoxes.length > 0) {
            messageBoxesHtml = activity.messageBoxes.map((box, index) => {
                let typeLabel = '';
                let typeColor = '';
                let contentPreview = '';
                
                if (box.type === 'text') {
                    typeLabel = '📝 ข้อความ';
                    typeColor = '#1976d2';
                    contentPreview = box.content.substring(0, 200) + (box.content.length > 200 ? '...' : '');
                } else if (box.type === 'image') {
                    typeLabel = '🖼️ รูปภาพ';
                    typeColor = '#7b1fa2';
                    contentPreview = `URL: ${box.content}`;
                } else if (box.type === 'flex') {
                    typeLabel = '💬 Flex Message';
                    typeColor = '#388e3c';
                    contentPreview = 'Flex JSON';
                }
                
                return `
                    <div style="background: white; padding: 10px; border-radius: 5px; margin-bottom: 8px; border-left: 4px solid ${typeColor};">
                        <div style="color: ${typeColor}; font-weight: bold; margin-bottom: 5px;">${index + 1}. ${typeLabel}</div>
                        <div style="color: #666; font-size: 0.9em;">${contentPreview}</div>
                    </div>
                `;
            }).join('');
        } else if (activity.message) {
            messageBoxesHtml = `
                <div style="background: white; padding: 10px; border-radius: 5px; border-left: 4px solid #1976d2;">
                    <div style="color: #1976d2; font-weight: bold; margin-bottom: 5px;">1. 📝 ข้อความ (รูปแบบเก่า)</div>
                    <div style="color: #666; font-size: 0.9em;">${activity.message.substring(0, 200)}${activity.message.length > 200 ? '...' : ''}</div>
                </div>
            `;
        }

        const detailsHtml = `
            <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 10px;">
                <strong>📝 ชื่อกิจกรรม:</strong><br>
                <div style="margin-top: 5px; font-size: 1.1em;">${activity.name}</div>
            </div>

            <div style="background: ${activity.useCooldown ? '#fff3cd' : '#d1ecf1'}; padding: 15px; border-radius: 10px; margin-bottom: 10px; text-align: center;">
                <strong style="color: ${activity.useCooldown ? '#856404' : '#0c5460'};">
                    ${activity.useCooldown ? '⏱️ มีระยะเวลา Cooldown' : '🚀 ส่งได้ไม่จำกัด'}
                </strong>
            </div>

            <div style="background: ${activity.allowSharedKeywords !== false ? '#d4edda' : '#f8d7da'}; padding: 15px; border-radius: 10px; margin-bottom: 10px; text-align: center;">
                <strong style="color: ${activity.allowSharedKeywords !== false ? '#155724' : '#721c24'};">
                    ${activity.allowSharedKeywords !== false ? '🔗 อนุญาตคีย์เวิร์ดซ้ำ' : '🔒 ไม่อนุญาตคีย์เวิร์ดซ้ำ'}
                </strong>
            </div>

            <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 10px;">
                <strong>📦 ข้อความที่จะส่ง (${activity.messageBoxes ? activity.messageBoxes.length : (activity.message ? 1 : 0)} รายการ):</strong><br>
                <div style="margin-top: 10px;">
                    ${messageBoxesHtml || '<div style="color: #999;">ไม่มีข้อความ</div>'}
                </div>
            </div>
        `;

        let cooldownHtml = '';
        if (activity.useCooldown) {
            cooldownHtml = `
                <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 10px;">
                    <strong>⏰ ข้อความ Cooldown:</strong><br>
                    <pre style="margin-top: 10px; background: white; padding: 15px; border-radius: 5px; white-space: pre-wrap; line-height: 1.6;">${activity.cooldownMessage}</pre>
                </div>

                <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 10px;">
                    <strong>⏱️ ระยะเวลา Cooldown:</strong><br>
                    <div style="margin-top: 5px; font-size: 1.1em;">${activity.cooldownHours} ชั่วโมง</div>
                </div>
            `;
        }

        const remainingHtml = `
            <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 10px;">
                <strong>🔑 คีย์เวิร์ด:</strong><br>
                <div style="margin-top: 10px;">
                    ${activity.keywords.map(k => `<span style="background: #667eea; color: white; padding: 5px 12px; border-radius: 15px; font-size: 0.9em; margin-right: 5px; display: inline-block; margin-bottom: 5px;">${k}</span>`).join('')}
                </div>
            </div>

            <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 10px;">
                <strong>📱 LINE Channels ที่เปิดใช้งาน:</strong><br>
                <div style="margin-top: 5px;">${channelNames}</div>
            </div>

            <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 10px;">
                <strong>📊 สถิติผู้ใช้:</strong><br>
                <div style="margin-top: 5px;">
                    👥 ผู้ใช้ทั้งหมด: <strong>${activity.users.length}</strong> คน
                    ${activity.useCooldown ? `<br>✅ ผู้ใช้พร้อมรับ: <strong style="color: #28a745;">${activity.usersCanSend}</strong> คน` : ''}
                </div>
            </div>

            <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 10px;">
                <strong>📅 สร้างเมื่อ:</strong><br>
                <div style="margin-top: 5px;">${new Date(activity.createdAt).toLocaleString('th-TH')}</div>
            </div>

            <div style="background: ${activity.enabled ? '#d4edda' : '#f8d7da'}; padding: 15px; border-radius: 10px; text-align: center;">
                <strong style="color: ${activity.enabled ? '#155724' : '#721c24'};">
                    ${activity.enabled ? '✅ เปิดใช้งาน' : '❌ ปิดใช้งาน'}
                </strong>
            </div>

            <button class="btn btn-secondary" onclick="closeDetailsModal()" style="width: 100%; margin-top: 20px;">
                ✖️ ปิด
            </button>
        `;

        document.getElementById('detailsContent').innerHTML = detailsHtml + cooldownHtml + remainingHtml;
        document.getElementById('detailsModal').style.display = 'block';
    }

    // Modal Functions
    function closeActivityModal() {
        document.getElementById('activityModal').style.display = 'none';
    }

    function closeUsersModal() {
        document.getElementById('usersModal').style.display = 'none';
    }

    function closeDetailsModal() {
        document.getElementById('detailsModal').style.display = 'none';
    }

    window.onclick = function(event) {
        if (event.target.classList.contains('modal')) {
            event.target.style.display = 'none';
        }
    }

    // Channel checkbox styling
    document.querySelectorAll('.channel-checkbox input').forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            if (this.checked) {
                this.parentElement.classList.add('checked');
            } else {
                this.parentElement.classList.remove('checked');
            }
        });
    });
</script>

<%- include('partials/footer') %>